{"version":3,"file":"user.js","names":["Object","defineProperty","exports","value","default","_bcryptjs","_interopRequireDefault","require","_sequelize","obj","__esModule","crypto","_default","sequelize","DataTypes","User","Model","associate","models","hasOne","Wallets","as","foreignKey","onDelete","hasMany","Transactions","init","full_name","STRING","username","email","phone_number","password","account_status","type","ENUM","defaultValue","country","referred_by","reg_date","DATE","avatar","modelName","tableName","freezeTableName","beforeCreate","user","createHash","update","digest","Date","getTime","split","Math","floor","random","beforeUpdate","changed","afterCreate","dataValues"],"sources":["../../../src/database/models/user.js"],"sourcesContent":["\"use strict\";\n\nimport bCrypt from \"bcryptjs\";\nconst crypto = require('crypto');\nimport { Model } from \"sequelize\";\n\nexport default (sequelize, DataTypes) => {\n  class User extends Model {\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    static associate(models) {\n      // define association here\n      User.hasOne(models.Wallets, {\n        as: \"wallet\",\n        foreignKey: \"user_id\",\n        onDelete: \"CASCADE\"\n      });\n      /*User.hasOne(models.ReferralWallets, {\n        as: \"referralWallet\",\n        foreignKey: \"user_id\",\n        onDelete: \"CASCADE\"\n      });*/\n\n      User.hasMany(models.Transactions, {\n        as: \"transactions\",\n        foreignKey: \"user_id\",\n        onDelete: \"CASCADE\"\n      })\n    }\n  }\n  User.init({\n    full_name: DataTypes.STRING,\n    username: DataTypes.STRING,\n    email: DataTypes.STRING,\n    phone_number: DataTypes.STRING,\n    password: DataTypes.STRING,\n    account_status: {\n      type: DataTypes.ENUM('active', 'pending'),\n      defaultValue: 'active', // Set default value here\n    }, country: DataTypes.STRING,\n    referred_by: DataTypes.STRING,\n    reg_date: DataTypes.DATE,\n    avatar: DataTypes.STRING\n  }, {\n    sequelize,\n    modelName: \"Users\",\n    tableName: \"Users\",\n    freezeTableName: true\n  });\n\n  //  Before the Records will be created, let's do the following.\n  User.beforeCreate((user) => {\n    user.password = crypto.createHash('md5').update(user.password).digest('hex');\n    user.reg_date = new Date().getTime();\n    user.username = user.email.split(\"@\")[0] + Math.floor(Math.random() * 900);\n  });\n  User.beforeUpdate((user) => {\n    if (!user.changed('password')) {\n      user.password = crypto.createHash('md5').update(user.password).digest('hex');\n  }\n    // user.password = crypto.createHash('md5').update(user.password).digest('hex');\n  });\n\n  //  After the record is persisted and before the persisted data are returned, let's remove the \"password\".\n  User.afterCreate((user) => {\n    delete user.dataValues.password\n  });\n\n  return User;\n};"],"mappings":"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","ignoreList":[]}