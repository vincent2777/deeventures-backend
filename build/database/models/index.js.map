{"version":3,"file":"index.js","names":["_fs","_interopRequireDefault","require","_path","_sequelize","_dbConfig","obj","__esModule","default","basename","path","__filename","env","process","APP_NODE_ENV","config","dbConfig","db","sequelize","use_env_variable","Sequelize","database","username","password","fs","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","DataTypes","name","Object","keys","modelName","associate","module","exports"],"sources":["../../../src/database/models/index.js"],"sourcesContent":["\"use strict\";\n\n/*const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst process = require('process');\nconst basename = path.basename(__filename);\nconst env = process.env.APP_NODE_ENV || 'development';\nconst config = require(__dirname + '/../../config/dbConfig.js')[env];\nconst db = {};*/\n\nimport fs from \"fs\";\nimport path from \"path\";\nimport Sequelize from \"sequelize\";\nimport dbConfig from \"../../config/dbConfig\";\n\nconst basename = path.basename(__filename);\nconst env = process.env.APP_NODE_ENV || \"development\";\nconst config = dbConfig[env];\nconst db = {};\n\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (\n      file.indexOf('.') !== 0 &&\n      file !== basename &&\n      file.slice(-3) === '.js' &&\n      file.indexOf('.test.js') === -1\n    );\n  })\n  .forEach(file => {\n    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,SAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA6C,SAAAD,uBAAAK,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE7C,MAAMG,QAAQ,GAAGC,aAAI,CAACD,QAAQ,CAACE,UAAU,CAAC;AAC1C,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAG,CAACE,YAAY,IAAI,aAAa;AACrD,MAAMC,MAAM,GAAGC,iBAAQ,CAACJ,GAAG,CAAC;AAC5B,MAAMK,EAAE,GAAG,CAAC,CAAC;AAGb,IAAIC,SAAS;AACb,IAAIH,MAAM,CAACI,gBAAgB,EAAE;EAC3BD,SAAS,GAAG,IAAIE,kBAAS,CAACP,OAAO,CAACD,GAAG,CAACG,MAAM,CAACI,gBAAgB,CAAC,EAAEJ,MAAM,CAAC;AACzE,CAAC,MAAM;EACLG,SAAS,GAAG,IAAIE,kBAAS,CAACL,MAAM,CAACM,QAAQ,EAAEN,MAAM,CAACO,QAAQ,EAAEP,MAAM,CAACQ,QAAQ,EAAER,MAAM,CAAC;AACtF;AAEAS,WAAE,CACCC,WAAW,CAACC,SAAS,CAAC,CACtBC,MAAM,CAACC,IAAI,IAAI;EACd,OACEA,IAAI,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IACvBD,IAAI,KAAKnB,QAAQ,IACjBmB,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IACxBF,IAAI,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAEnC,CAAC,CAAC,CACDE,OAAO,CAACH,IAAI,IAAI;EACf,MAAMI,KAAK,GAAG9B,OAAO,CAACQ,aAAI,CAACuB,IAAI,CAACP,SAAS,EAAEE,IAAI,CAAC,CAAC,CAACV,SAAS,EAAEE,kBAAS,CAACc,SAAS,CAAC;EACjFjB,EAAE,CAACe,KAAK,CAACG,IAAI,CAAC,GAAGH,KAAK;AACxB,CAAC,CAAC;AAEJI,MAAM,CAACC,IAAI,CAACpB,EAAE,CAAC,CAACc,OAAO,CAACO,SAAS,IAAI;EACnC,IAAIrB,EAAE,CAACqB,SAAS,CAAC,CAACC,SAAS,EAAE;IAC3BtB,EAAE,CAACqB,SAAS,CAAC,CAACC,SAAS,CAACtB,EAAE,CAAC;EAC7B;AACF,CAAC,CAAC;AAEFA,EAAE,CAACC,SAAS,GAAGA,SAAS;AACxBD,EAAE,CAACG,SAAS,GAAGA,kBAAS;AAExBoB,MAAM,CAACC,OAAO,GAAGxB,EAAE","ignoreList":[]}