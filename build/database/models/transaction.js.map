{"version":3,"file":"transaction.js","names":["_sequelize","require","_random_number_generator","module","exports","sequelize","DataTypes","Transaction","Model","associate","models","belongsTo","Users","as","foreignKey","onDelete","init","user_id","INTEGER","trnx_amount","DOUBLE","trnx_reference","TEXT","trnx_date","DATE","trnx_type","ENUM","trnx_desc","STRING","trnx_status","trnx_rate","FLOAT","trnx_address","trnx_image","to_receive","currency","modelName","tableName","freezeTableName","beforeCreate","transaction","generateFixedRandomID","Date","toISOString"],"sources":["../../../src/database/models/transaction.js"],"sourcesContent":["\"use strict\";\n\nimport { Model } from \"sequelize\";\nimport {generateFixedRandomID} from \"../../utils/random_number_generator\";\n\nmodule.exports = (sequelize, DataTypes) => {\n  class Transaction extends Model {\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    static associate(models) {\n      // define association here\n      Transaction.belongsTo(models.Users, {\n        as: \"user\",\n        foreignKey: \"user_id\",\n        onDelete: \"CASCADE\"\n      })\n    }\n  }\n  Transaction.init({\n    user_id: DataTypes.INTEGER,\n    trnx_amount: DataTypes.DOUBLE,\n    trnx_reference: DataTypes.TEXT,\n    trnx_date: DataTypes.DATE,\n    trnx_type: DataTypes.ENUM(\"Gift Card Sale\", \"Coin Purchase\", \"Coin Sale\", \"Bill Payment\", \"Wallet Funding\", \"Fund Withdrawal\", \"Promo Usage\"),\n    trnx_desc: DataTypes.STRING,\n    trnx_status: DataTypes.INTEGER,\n    trnx_rate: DataTypes.FLOAT,\n    trnx_address: DataTypes.STRING,\n    trnx_image: DataTypes.STRING,\n    to_receive: DataTypes.FLOAT,\n    currency: DataTypes.STRING\n  }, {\n    sequelize,\n    modelName: \"Transactions\",\n    tableName: \"Transactions\",\n    freezeTableName: true\n  });\n\n  //  Before the Records will be created, let's do the following.\n  Transaction.beforeCreate((transaction) => {\n    transaction.trnx_reference = \"TREF-\" + generateFixedRandomID(12)\n    transaction.trnx_date = new Date().toISOString();\n  });\n\n  return Transaction;\n};"],"mappings":"AAAA,YAAY;;AAEZ,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,wBAAA,GAAAD,OAAA;AAEAE,MAAM,CAACC,OAAO,GAAG,CAACC,SAAS,EAAEC,SAAS,KAAK;EACzC,MAAMC,WAAW,SAASC,gBAAK,CAAC;IAC9B;AACJ;AACA;AACA;AACA;IACI,OAAOC,SAASA,CAACC,MAAM,EAAE;MACvB;MACAH,WAAW,CAACI,SAAS,CAACD,MAAM,CAACE,KAAK,EAAE;QAClCC,EAAE,EAAE,MAAM;QACVC,UAAU,EAAE,SAAS;QACrBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF;EACAR,WAAW,CAACS,IAAI,CAAC;IACfC,OAAO,EAAEX,SAAS,CAACY,OAAO;IAC1BC,WAAW,EAAEb,SAAS,CAACc,MAAM;IAC7BC,cAAc,EAAEf,SAAS,CAACgB,IAAI;IAC9BC,SAAS,EAAEjB,SAAS,CAACkB,IAAI;IACzBC,SAAS,EAAEnB,SAAS,CAACoB,IAAI,CAAC,gBAAgB,EAAE,eAAe,EAAE,WAAW,EAAE,cAAc,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,aAAa,CAAC;IAC7IC,SAAS,EAAErB,SAAS,CAACsB,MAAM;IAC3BC,WAAW,EAAEvB,SAAS,CAACY,OAAO;IAC9BY,SAAS,EAAExB,SAAS,CAACyB,KAAK;IAC1BC,YAAY,EAAE1B,SAAS,CAACsB,MAAM;IAC9BK,UAAU,EAAE3B,SAAS,CAACsB,MAAM;IAC5BM,UAAU,EAAE5B,SAAS,CAACyB,KAAK;IAC3BI,QAAQ,EAAE7B,SAAS,CAACsB;EACtB,CAAC,EAAE;IACDvB,SAAS;IACT+B,SAAS,EAAE,cAAc;IACzBC,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;EACnB,CAAC,CAAC;;EAEF;EACA/B,WAAW,CAACgC,YAAY,CAAEC,WAAW,IAAK;IACxCA,WAAW,CAACnB,cAAc,GAAG,OAAO,GAAG,IAAAoB,8CAAqB,EAAC,EAAE,CAAC;IAChED,WAAW,CAACjB,SAAS,GAAG,IAAImB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAClD,CAAC,CAAC;EAEF,OAAOpC,WAAW;AACpB,CAAC","ignoreList":[]}