{"version":3,"file":"token_validation.js","names":["Object","defineProperty","exports","value","default","_jsonwebtoken","_interopRequireDefault","require","_response","_models","obj","__esModule","_defineProperty","key","_toPropertyKey","enumerable","configurable","writable","t","i","_toPrimitive","r","e","Symbol","toPrimitive","call","TypeError","String","Number","Users","models","TokenValidation","req","res","next","bearerToken","headers","authorization","query","token","body","response","Response","status","code","json","split","id","jwt","verify","process","env","JWT_SECRET_KEY","user","findOne","where","requestPayload","error","_default"],"sources":["../../src/utils/token_validation.js"],"sourcesContent":["\"use strict\";\n\nimport jwt from 'jsonwebtoken';\nimport Response from './response';\nimport models from \"../database/models\";\n\nconst { Users } = models;\n\nclass TokenValidation {\n\n    //  User Token Validation.\n    static userTokenValidation = async (req, res, next) => {\n        try {\n            //  Get the token from the \"Header, Query or Body\" if available.\n            const bearerToken = req.headers.authorization ||\n                req.headers['x-access-token'] ||\n                req.query.token ||\n                req.body.token;\n            if (!bearerToken) {\n                const response = new Response(\n                    false,\n                    401,\n                    \"Unauthorized, you did not provide any token.\"\n                );\n                return res.status(response.code).json(response);\n            }\n\n            // Split the access token and remove the Bearer and pick only the jwt token\n            const token = bearerToken.split(\" \")[1];\n\n            //  Get the Users \"id\".\n            const { id } = jwt.verify(token, process.env.JWT_SECRET_KEY);\n\n            //  Make sure that the respective User exists in the DB.\n            const user = await Users.findOne({\n                where: { id }\n            });\n            if (!user) {\n                const response = new Response(\n                    false,\n                    401,\n                    \"Unauthorized, this user does not exist.\",\n                );\n                return res.status(response.code).json(response);\n            }\n\n            //  Now append the decoded token to the request body.\n            req.requestPayload = jwt.verify(token, process.env.JWT_SECRET_KEY);\n            return next();\n\n        } catch (error) {\n            const response = new Response(\n                false,\n                401,\n                \"Unauthorized, you have an invalid token.\"\n            );\n            return res.status(response.code).json(response);\n        }\n    };\n}\n\nexport default TokenValidation;\n"],"mappings":"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","ignoreList":[]}